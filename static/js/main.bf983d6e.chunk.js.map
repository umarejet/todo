{"version":3,"sources":["components/mapData.js","App.js","reportWebVitals.js","index.js"],"names":["MapData","e","i","deleteHandler","localStorage","getItem","dueDate","split","slice","join","onClick","Provider","value","className","App","useState","Date","startDate","setStartDate","setValue","length","setLength","data","change","setChange","active","setActive","searchVal","setSearchVal","sortDate","setSortDate","monthArray","useEffect","activity","key","push","due","handleDate","trim","monthIndex","getMonth","getDay","getDate","month","year","getFullYear","setItem","toast","success","error","index","removeItem","splice","setTimeout","type","onChange","target","selected","date","dateFormat","minDate","showDisabledMonthNavigation","size","placeholder","css","flexDirection","height","width","handleDiameter","borderRadius","checked","checkedIcon","uncheckedIcon","sort","a","b","getTime","toLowerCase","toLocaleLowerCase","map","filter","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf983d6e.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport React from \"react\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport \"twin.macro\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport const MapData = ({ e, i, deleteHandler }) => {\r\n  if (localStorage.getItem(e) !== null) {\r\n    let dueDate = localStorage.getItem(e).split(\" \").slice(0, 3).join(\" \");\r\n\r\n    return (\r\n      <div tw=\"m-5 p-6 border-2 bg-gray-700 border-gray-600 shadow-md rounded-lg flex justify-between items-center w-full font-poppins \">\r\n        <div tw=\"w-1/2\">\r\n          <h1 tw=\"text-2xl font-medium text-white\">{e}</h1>\r\n          <h1 tw=\"flex items-center justify-between text-sm text-gray-500 cursor-default\">Due date : {dueDate}</h1>\r\n        </div>\r\n        <span\r\n          tw=\"flex items-center justify-center cursor-pointer w-10 h-10\"\r\n          onClick={() => deleteHandler(i)}\r\n        >\r\n        <IconContext.Provider value={{className: 'react-icons'}}>\r\n          <FaTrashAlt />\r\n          </IconContext.Provider>\r\n        </span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n// eslint-disable-next-line\r\nimport tw from \"twin.macro\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { MapData } from \"./components/mapData\";\r\nimport Switch from \"react-switch\";\r\nimport { MdDateRange } from \"react-icons/md\";\r\nimport { IoMdListBox } from \"react-icons/io\";\r\nimport { FcSearch } from \"react-icons/fc\";\r\n\r\nconst notify = () => toast.success(\"Activity Added\");\r\nconst notifyDelete = () => toast(\"Activity Deleted âœ”\");\r\nconst notifyFail1 = () => toast.error(\"Please Input Activity\");\r\nconst notifyFail2 = () => toast.error(\"Please Input Another Activity\");\r\n\r\nconst App = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [value, setValue] = useState(\"\");\r\n  const [length, setLength] = useState(localStorage.length);\r\n  // eslint-disable-next-line\r\n  const [data, setData] = useState([]);\r\n  const [change, setChange] = useState(true);\r\n  const [active, setActive] = useState(false);\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const [sortDate, setSortDate] = useState(false);\r\n\r\n  const monthArray = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < length; i++) {\r\n      let activity = localStorage.key(i);\r\n      let dueDate = localStorage.getItem(activity).split(\" \");\r\n      data.push({ activity: activity, due: dueDate[3] });\r\n    }\r\n    setActive(!active);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleDate = () => {\r\n    if (value.trim().length !== 0 && localStorage.getItem(value) === null) {\r\n      let monthIndex = startDate.getMonth();\r\n      let getDay = startDate.getDate();\r\n      let month = monthArray[monthIndex];\r\n      let year = startDate.getFullYear();\r\n      let dueDate = `${month} ${getDay}th ${year}`;\r\n      let due = `${monthIndex + 1}/${getDay}/${year}`;\r\n\r\n      data.push({ activity: value, due: due });\r\n      setValue(\"\");\r\n\r\n      setChange(!change);\r\n      localStorage.setItem(`${value}`, `${dueDate}`);\r\n      setLength(localStorage.length);\r\n\r\n      notify();\r\n    } else if (localStorage.getItem(value) !== null) {\r\n      notifyFail2();\r\n    } else {\r\n      notifyFail1();\r\n    }\r\n  };\r\n\r\n  const deleteHandler = (index) => {\r\n    localStorage.removeItem(data[index].activity);\r\n    data.splice(index, 1);\r\n    setChange(!change);\r\n    setTimeout(() => {\r\n      notifyDelete();\r\n    }, 500);\r\n  };\r\n\r\n  const filtered = () => {\r\n    let dataFiltered = data.filter((data) => {\r\n      let dataLower = data.activity.toLowerCase();\r\n      return dataLower.indexOf(searchVal.toLocaleLowerCase()) !== -1;\r\n    });\r\n    return dataFiltered.map((e, i) => {\r\n      return <MapData e={e.activity} i={i} deleteHandler={deleteHandler} />;\r\n    });\r\n  };\r\n\r\n  const renderActivity = () => {\r\n    if (!sortDate) {\r\n      data.sort((a, b) =>\r\n        a.activity.toLowerCase() > b.activity.toLocaleLowerCase() ? 1 : -1\r\n      );\r\n    } else {\r\n      data.sort((a, b) => {\r\n        return new Date(a.due).getTime() - new Date(b.due).getTime();\r\n      });\r\n    }\r\n    if (data.length !== 0 && searchVal === \"\") {\r\n      return data.map((e, i) => {\r\n        return <MapData e={e.activity} i={i} deleteHandler={deleteHandler} />;\r\n      });\r\n    } else {\r\n      return filtered();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div tw=\"flex flex-col justify-center items-center w-screen md:w-full \">\r\n        <div tw=\"flex bg-indigo-800 w-screen justify-center items-center shadow-md h-24\">\r\n          <h1 tw=\"text-3xl md:text-5xl text-white font-akaya\">\r\n            To Do Organizer\r\n          </h1>\r\n        </div>\r\n        <div tw=\"flex flex-col w-full flex-wrap md:w-10/12 lg:w-1/2 mt-5 \">\r\n          <div tw=\"flex flex-row flex-wrap pl-2 md:pl-0 md:flex-no-wrap items-end\">\r\n            <div tw=\"flex flex-col w-full h-full mr-5 font-kanit\">\r\n              <div tw=\"flex items-center\">\r\n                <span tw=\"mr-2\">\r\n                  <span>\r\n                    <h1 tw=\"text-xl\">Task Name</h1>\r\n                  </span>\r\n                </span>\r\n                <IoMdListBox />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                tw=\"border border-black focus:outline-none\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div tw=\"flex flex-col w-auto h-full font-kanit\">\r\n              <div tw=\"flex items-center\">\r\n                <span tw=\"mr-2\">\r\n                  <h1 tw=\"text-xl\">Due Date</h1>\r\n                </span>\r\n                <MdDateRange />\r\n              </div>\r\n\r\n              <DatePicker\r\n                tw=\"border border-black text-gray-600\"\r\n                selected={startDate}\r\n                onChange={(date) => setStartDate(date)}\r\n                dateFormat=\"MM/dd/yyyy\"\r\n                minDate={new Date()}\r\n                showDisabledMonthNavigation\r\n              />\r\n            </div>\r\n            <div tw=\"ml-5\">\r\n              <button\r\n                onClick={() => {\r\n                  handleDate();\r\n                }}\r\n                tw=\"bg-blueDark hover:bg-blue-700 py-1 px-5 rounded-sm font-kanit hover:text-gray-300 text-white\"\r\n              >\r\n                Add\r\n              </button>\r\n              <Toaster />\r\n            </div>\r\n          </div>\r\n          <div tw=\"flex justify-center mt-5\">\r\n            <span tw=\"bg-gray-900 w-11/12 md:w-full h-2\"></span>\r\n          </div>\r\n          <div tw=\"flex items-end w-full justify-between pl-4 pr-4 md:pr-0 md:pl-0 font-kanit\">\r\n            <div tw=\"flex flex-col w-40 h-full mr-5 mt-5 pb-1\">\r\n              <div tw=\"flex items-center\">\r\n                <h1 tw=\"text-xl\">Search</h1>\r\n                <FcSearch />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                tw=\"border border-black \"\r\n                value={searchVal}\r\n                onChange={(e) => setSearchVal(e.target.value)}\r\n                size=\"100\"\r\n                placeholder=\"Search for activity...\"\r\n              />\r\n            </div>\r\n            <div\r\n              css={{ \"@media (max-width: 325px)\": { flexDirection: \"column\" } }}\r\n              tw=\"flex items-center font-poppins\"\r\n            >\r\n              <h1 tw=\"pr-4 text-lg lg:text-xl\">Sort By</h1>\r\n              <Switch\r\n                height={40}\r\n                width={85}\r\n                handleDiameter={28}\r\n                borderRadius={6}\r\n                onChange={() => {\r\n                  setSortDate(!sortDate);\r\n                }}\r\n                checked={sortDate}\r\n                checkedIcon={\r\n                  <div tw=\"flex pl-2 items-center h-full text-white text-sm\">\r\n                    Date\r\n                  </div>\r\n                }\r\n                uncheckedIcon={\r\n                  <div tw=\"flex justify-center items-center h-full text-white text-sm\">\r\n                    Name\r\n                  </div>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div tw=\"flex flex-col items-center mt-10 p-5 sm:p-0\">\r\n            {data.length !== 0 ? (\r\n              renderActivity()\r\n            ) : (\r\n              <h1 tw=\"mt-10 text-3xl md:text-4xl font-poppins text-gray-700\">\r\n                No Activity\r\n              </h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport 'tailwindcss/dist/base.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}